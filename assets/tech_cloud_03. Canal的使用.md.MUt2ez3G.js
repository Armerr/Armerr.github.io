import{_ as a,c as e,o as n,aH as r}from"./chunks/framework.BJ3AeCMO.js";const u=JSON.parse('{"title":"Canal的使用","description":"","frontmatter":{"title":"Canal的使用","date":"2023-03-12T17:12:26.000Z","permalink":"/pages/e220ca/","categories":["技术","后端"],"tags":["中间件","canal","数据库"]},"headers":[],"relativePath":"tech/cloud/03. Canal的使用.md","filePath":"tech/cloud/03. Canal的使用.md","lastUpdated":1704104554000}'),t={name:"tech/cloud/03. Canal的使用.md"},s=r(`<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>canal由阿里使用java开发的数据同步中间件。基于数据库增量日志解析，提供增量数据订阅与消费，主要用于mysql数据库binlog的增量订阅、消费。 部署canal相关服务的前提条件： 1.MySQL需要先开启 Binlog 写入功能，配置 binlog-format 为 ROW 模式, 并且账号默认具有 binlog dump 权限 2.docker环境</p></div><h2 id="canal-admin部署" tabindex="-1">canal-admin部署 <a class="header-anchor" href="#canal-admin部署" aria-label="Permalink to &quot;canal-admin部署&quot;">​</a></h2><p>canal-admin为canal的配置和运维提供了WebUI操作界面。该服务为非必须，有无canal-admin服务，会影响cancal-server配置参数，在后面canal-server部署中会做说明。关于admin的详细，查看Canal Admin Guide<br> 获取docker镜像，命令：docker pull canal/canal-admin:latest<br> canal提供了一个docker启动脚本run_admin.sh，脚本地址<br> 使用命令下载：wget <a href="https://raw.githubusercontent.com/alibaba/canal/master/docker/run_admin.sh" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/alibaba/canal/master/docker/run_admin.sh</a><br> 启动admin服务 sh run_admin.sh -e server.port=8089<br> -e canal.adminUser=admin<br> -e canal.adminPasswd=admin<br> # 或者指定外部的mysql作为admin的库<br> sh run_admin.sh -e server.port=8088<br> -e spring.datasource.address=xxx<br> -e spring.datasource.database=xx<br> -e spring.datasource.username=xx<br> -e spring.datasource.password=xx<br></p><pre><code>   # -e参数里可以指定以前application.yml里所有配置的key和value，springboot启动时会读取-e指定的变量
</code></pre><p>数据库脚本下载</p><p>访问admin，访问 <a href="http://127.0.0.1:8089/" target="_blank" rel="noreferrer">http://127.0.0.1:8089/</a> ，默认账号密码: admin/123456，在页面上可以添加和配置集群，server，和instance</p><p>instance，对应canal-server里的instance，一个最小的订阅mysql的队列</p><p>server：对应canal-server，一个server里可以包含多个instance</p><p>集群：对应一组canal-server</p><h2 id="canal-server" tabindex="-1">canal-server <a class="header-anchor" href="#canal-server" aria-label="Permalink to &quot;canal-server&quot;">​</a></h2><p>获取docker镜像，命令：docker pull canal/canal-server:latest</p><p>canal提供了一个docker启动脚本run.sh，脚本地址</p><p>使用命令行下载： wget <a href="https://raw.githubusercontent.com/alibaba/canal/master/docker/run.sh" target="_blank" rel="noreferrer">https://raw.githubusercontent.com/alibaba/canal/master/docker/run.sh</a><br> 启动server服务<br> 方式一：注册至canal-admin并启动，canal-server版本需要1.1.4以上<br></p><h1 id="以单机模式启动" tabindex="-1">以单机模式启动 <a class="header-anchor" href="#以单机模式启动" aria-label="Permalink to &quot;以单机模式启动&quot;">​</a></h1><p>sh run.sh -e canal.admin.manager=127.0.0.1:8089 <br> -e canal.admin.port=11110 <br> -e canal.admin.user=admin <br> -e canal.admin.passwd=4ACFE3202A5FF5CF467898FC58AAB1D615029441</p><h1 id="自动加入test集群" tabindex="-1">自动加入test集群 <a class="header-anchor" href="#自动加入test集群" aria-label="Permalink to &quot;自动加入test集群&quot;">​</a></h1><p>sh run.sh -e canal.admin.manager=127.0.0.1:8089 <br> -e canal.admin.port=11110 <br> -e canal.admin.user=admin <br> -e canal.admin.passwd=4ACFE3202A5FF5CF467898FC58AAB1D615029441 -e canal.admin.register.cluster=test #指定canal.admin.register.cluster时，需要存在该集群，否则无法启动。 #canal.admin.passwd的值由mysql生成，select password(对应canal-admin的canal.adminPasswd明文参数值)，结果去掉*号。canal-server会以这个密文和canal-admin做请求，同时canal-admin也会议密码原文生成加密串后和canal-server进行admin端口链接，所以这里一定要确保这两个密码内容的一致性 方式二：直接启动<br> sh run.sh -e canal.auto.scan=false <br> -e canal.destinations=test <br> -e canal.instance.master.address=192.168.0.180:3306 <br> -e canal.instance.dbUsername=root <br> -e canal.instance.dbPassword=123456 <br> -e canal.instance.connectionCharset=UTF-8 <br> -e canal.instance.tsdb.enable=true <br> -e canal.instance.gtidon=false <br> 两种启动方式的区别</p><p>方式一，启动时还未设置需要监听的数据库信息，需在canal-admin页面新增server实例，然后为server新增instance实例并配置数据库。可以为一个server创建多个instance，每个instance有独立的配置instance.properties，所以启动一个canal-server可以监听多个不同的mysql（ip等信息不同）。<br> 启动方式二，直接启动cancal-server并新增一个名为test的instance，并且已经配置好intance监听的数据库。若要实现多个instance，通过canal.destinations指定多个intance名称,具体instance.properties配置请查看下方的&quot;instance配置项说明&quot;<br> instance配置项说明<br> 如果canal.properties（在canal-admin界面的&quot;server管理中&quot;可直接编辑）内canal.serverMode的属性值为rabbitMQ，instance的名称就相当于rabbitMQ的queueName<br></p><h2 id="canal-client" tabindex="-1">canal-client <a class="header-anchor" href="#canal-client" aria-label="Permalink to &quot;canal-client&quot;">​</a></h2><p>请下载canal源码包，里面有个example工程 <a href="https://github.com/alibaba/canal" target="_blank" rel="noreferrer">https://github.com/alibaba/canal</a></p>`,20),c=[s];function l(i,d,o,m,b,p){return n(),e("div",null,c)}const _=a(t,[["render",l]]);export{u as __pageData,_ as default};
